version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: afriviral-db
    environment:
      POSTGRES_DB: afriviral
      POSTGRES_USER: afriviral_user
      POSTGRES_PASSWORD: afriviral_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql
    networks:
      - afriviral-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: afriviral-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://afriviral_user:afriviral_password@postgres:5432/afriviral
      JWT_SECRET: your_production_jwt_secret_key_here
      PAYSTACK_SECRET_KEY: ${PAYSTACK_SECRET_KEY}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_WHATSAPP_NUMBER: ${TWILIO_WHATSAPP_NUMBER}
    ports:
      - "3001:3001"
    depends_on:
      - postgres
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - afriviral-network
    restart: unless-stopped

  # Frontend Next.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: afriviral-frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3001}
      NEXT_PUBLIC_PAYSTACK_PUBLIC_KEY: ${NEXT_PUBLIC_PAYSTACK_PUBLIC_KEY}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - afriviral-network
    restart: unless-stopped

  # n8n for AI workflows
  n8n:
    image: n8nio/n8n:latest
    container_name: afriviral-n8n
    environment:
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: afriviral_n8n_password
      N8N_HOST: localhost
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      NODE_ENV: production
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    networks:
      - afriviral-network
    restart: unless-stopped

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: afriviral-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - afriviral-network
    restart: unless-stopped

  # Nginx reverse proxy with SSL
  nginx:
    image: nginx:alpine
    container_name: afriviral-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - afriviral-network
    restart: unless-stopped

volumes:
  postgres_data:
  n8n_data:
  redis_data:

networks:
  afriviral-network:
    driver: bridge